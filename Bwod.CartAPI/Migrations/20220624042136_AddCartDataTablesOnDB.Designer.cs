// <auto-generated />
using Bwod.CartAPI.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bwod.CartAPI.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20220624042136_AddCartDataTablesOnDB")]
    partial class AddCartDataTablesOnDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bwod.CartAPI.Model.CartDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("cart_header_id")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("cart_header_id");

                    b.HasIndex("product_id");

                    b.ToTable("cart_detail");
                });

            modelBuilder.Entity("Bwod.CartAPI.Model.CartHeader", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("coupon_code")
                        .HasColumnType("longtext")
                        .HasColumnName("coupon_code");

                    b.Property<string>("user_id")
                        .HasColumnType("longtext")
                        .HasColumnName("user_id");

                    b.HasKey("id");

                    b.ToTable("cart_header");
                });

            modelBuilder.Entity("Bwod.CartAPI.Model.Product", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("category_name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category_name");

                    b.Property<string>("description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("image_url")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("image_url");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.HasKey("id");

                    b.ToTable("product");
                });

            modelBuilder.Entity("Bwod.CartAPI.Model.CartDetail", b =>
                {
                    b.HasOne("Bwod.CartAPI.Model.CartHeader", "cart_header")
                        .WithMany()
                        .HasForeignKey("cart_header_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bwod.CartAPI.Model.Product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cart_header");

                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
